<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.vermore.mapper.RamenMapper">
  <resultMap id="BaseResultMap" type="jp.co.vermore.entity.Ramen">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sort_score" jdbcType="INTEGER" property="sortScore" />
    <result column="excerpt" jdbcType="VARCHAR" property="excerpt" />
    <result column="publish_start" jdbcType="TIMESTAMP" property="publishStart" />
    <result column="publish_end" jdbcType="TIMESTAMP" property="publishEnd" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime" />
    <result column="del_flg" jdbcType="BIT" property="delFlg" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uuid, `date`, `type`, title, sort_score, excerpt, publish_start, publish_end, 
    create_datetime, update_datetime, del_flg, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `ramen`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `ramen`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="jp.co.vermore.entity.Ramen">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `ramen` (id, uuid, `date`, 
      `type`, title, sort_score, 
      excerpt, publish_start, publish_end, 
      create_datetime, update_datetime, del_flg, 
      note)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{sortScore,jdbcType=INTEGER}, 
      #{excerpt,jdbcType=VARCHAR}, #{publishStart,jdbcType=TIMESTAMP}, #{publishEnd,jdbcType=TIMESTAMP}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{updateDatetime,jdbcType=TIMESTAMP}, #{delFlg,jdbcType=BIT}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.vermore.entity.Ramen">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `ramen`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sortScore != null">
        sort_score,
      </if>
      <if test="excerpt != null">
        excerpt,
      </if>
      <if test="publishStart != null">
        publish_start,
      </if>
      <if test="publishEnd != null">
        publish_end,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="updateDatetime != null">
        update_datetime,
      </if>
      <if test="delFlg != null">
        del_flg,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sortScore != null">
        #{sortScore,jdbcType=INTEGER},
      </if>
      <if test="excerpt != null">
        #{excerpt,jdbcType=VARCHAR},
      </if>
      <if test="publishStart != null">
        #{publishStart,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEnd != null">
        #{publishEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null">
        #{delFlg,jdbcType=BIT},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.vermore.entity.Ramen">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `ramen`
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sortScore != null">
        sort_score = #{sortScore,jdbcType=INTEGER},
      </if>
      <if test="excerpt != null">
        excerpt = #{excerpt,jdbcType=VARCHAR},
      </if>
      <if test="publishStart != null">
        publish_start = #{publishStart,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEnd != null">
        publish_end = #{publishEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null">
        del_flg = #{delFlg,jdbcType=BIT},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.vermore.entity.Ramen">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `ramen`
    set uuid = #{uuid,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      sort_score = #{sortScore,jdbcType=INTEGER},
      excerpt = #{excerpt,jdbcType=VARCHAR},
      publish_start = #{publishStart,jdbcType=TIMESTAMP},
      publish_end = #{publishEnd,jdbcType=TIMESTAMP},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      del_flg = #{delFlg,jdbcType=BIT},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRamen" parameterType="int" resultMap="BaseResultMap">
    select id
    from ramen
    where id = #{id}
  </select>

  <select id="getRamenByUuid" parameterType="String" resultMap="BaseResultMap">
    select *
    from ramen
    where uuid = #{uuid}
  </select>

  <select id="getRamenPre" resultMap="BaseResultMap">
    select *
    from ramen
    where date &lt; #{param1}
      and `type` between 1 and 3
      and del_flg = 0
      and publish_start &lt; #{param3}
      and publish_end &gt; #{param2}
    order by date desc
      LIMIT 1;
  </select>

  <select id="getRamenNext" resultMap="BaseResultMap">
    select *
    from ramen
    where date &gt; #{param1}
      and `type` between 1 and 3
      and del_flg = 0
      and publish_start &lt; #{param3}
      and publish_end &gt; #{param2}
    order by date asc
      LIMIT 1;
  </select>

  <select id="getRamenCategory" parameterType="int" resultMap="BaseResultMap">
    select uuid,date,type,title,excerpt
    from ramen
    where type = #{param1}
      LIMIT #{param2} OFFSET #{param3};
  </select>

  <select id="getRamenJsonAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from ramen
    where del_flg = 0 and `type` between 1 and 3
    and publish_start &lt; #{param3}
    and publish_end &gt; #{param2}
    <if test="param1 != 0 and param1 != 4 and param1 != 5">
      and type = #{param1}
    </if>
    order by `date` desc
    LIMIT #{param4} OFFSET #{param5};
  </select>

  <select id="getRamenJsonAllByType" resultMap="BaseResultMap">
    select uuid,date,type,title,excerpt
    from ramen
    where del_flg = 0 and `type` between 1 and 3
    and publish_start &lt; #{param3}
    and publish_end &gt; #{param2}
    <if test="param1 != 0">
      and type = #{param1}
    </if>
    order by `date` desc
  </select>

  <select id="getRamenByIdAndType" resultMap="BaseResultMap">
    select uuid,date,type,title,excerpt
    from ramen
    where del_flg = 0
    <if test="param1 != 0">
      and id = #{param1}
    </if>
    <if test="param2 != 0">
      and type = #{param2}
    </if>
  </select>

  <select id="getRamenEventAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from ramen
    where del_flg = 0
    and publish_start &lt; #{param3}
    and publish_end &gt;= #{param4}
    <if test="param1 != 0">
      and type = #{param1} OR type = #{param2}
    </if>
    LIMIT #{param5} OFFSET #{param6};
  </select>

  <select id="getRamenAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from ramen
    where  `type` between 1 and 3 and del_flg = 0
    order by date desc
  </select>

  <select id="getRamenAllForTop" resultMap="BaseResultMap">
    select uuid,date,type,title,excerpt
    from ramen
    where  `type` between 1 and 3 and del_flg = 0
      and publish_start &lt; #{param2}
      and publish_end &gt; #{param1}
    order by sort_score desc,`date`desc, create_datetime desc
      LIMIT 8
  </select>

  <insert id="insertRamen">
    insert into ramen(
    uuid,
    date,
    type,
    title,
    sort_score,
    excerpt,
    publish_start,
    publish_end,
    create_datetime,
    update_datetime,
    del_flg,
    note
    ) values (
    #{uuid},
    #{date},
    #{type},
    #{title},
    #{sortScore},
    #{excerpt},
    #{publishStart},
    #{publishEnd},
    #{createDatetime},
    #{updateDatetime},
    #{delFlg},
    #{note}
    )
    <selectKey keyProperty="id" order="AFTER" resultType="Long">
      select @@IDENTITY
    </selectKey>
  </insert>

  <delete id="deleteRamen">
    update ramen set del_flg = #{delFlg} where id = #{id}
  </delete>

  <update id="updateRamen">
    update ramen
    set
      date = #{date},
      type = #{type},
      title = #{title},
      sort_score = #{sortScore},
      excerpt = #{excerpt},
      publish_start = #{publishStart},
      publish_end = #{publishEnd},
      create_datetime = #{createDatetime},
      update_datetime = #{updateDatetime},
      del_flg = #{delFlg},
      note = #{note}
    where id = #{id}
  </update>

  <select id="getRamenList" resultMap="BaseResultMap">
    select id,uuid,date,type,title,sort_score,excerpt,publish_start,publish_end
    from ramen
    where del_flg = 0
      and id = #{id}
  </select>

  <select id="getRamenAllByCondition" parameterType="jp.co.vermore.form.admin.RamenListForm" resultMap="BaseResultMap">
    select *
    from ramen
    where del_flg = 0 and `type` between 1 and 3
    <if test="type != null and type != 9 and type != 4 and type != 5">
      and `type` = #{type}
    </if>
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != '' ">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
    order by ${orderStatement} ,sort_score desc,`date`desc, create_datetime desc
    LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
  </select>

  <select id="getRamenCountByCondition" parameterType="jp.co.vermore.form.admin.RamenListForm" resultType="int">
    select count(id) as totalCount
    from ramen
    where del_flg = 0 and `type` between 1 and 3
    <if test="type != null and type != 9 and type != 4 and type != 5">
      and `type` = #{type}
    </if>
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != ''">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
  </select>

  <select id="getRamenCount" resultType="int">
    select count(id) as totalCount
    from ramen
    where `type` between 1 and 3 and del_flg = 0;
  </select>

  <select id="getStudioRamenList" parameterType="jp.co.vermore.entity.Ramen" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ramen
    where del_flg = 0
    <if test="param1 != null">
      and type = #{param1}
    </if>
    and publish_start &lt; #{param3}
    and publish_end &gt;= #{param4}
    order by sort_score desc , `date`desc
    limit 5;
  </select>

  <select id="getStudioRamenListAll" parameterType="jp.co.vermore.entity.Ramen" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ramen
    where del_flg = 0
    <if test="param1 != null">
      and type = #{param1}
    </if>
    order by sort_score desc , `date`desc
    LIMIT #{param2} OFFSET #{param3};
  </select>

  <select id="getStudioRamenALL" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ramen
    where del_flg = 0
    and type = #{type}
    order by date desc
  </select>

  <select id="getStudioAllByCondition" parameterType="jp.co.vermore.form.admin.RamenListForm" resultMap="BaseResultMap">
    select *
    from ramen
    where del_flg = 0
    and type = 5
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != '' ">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
    order by ${orderStatement}
    LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
  </select>

  <select id="getStudioCountByCondition" parameterType="jp.co.vermore.form.admin.RamenListForm" resultType="int">
    select count(id) as totalCount
    from ramen
    where del_flg = 0
    and type = 5
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != ''">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
  </select>

  <select id="getStudioCount" resultType="int">
    select count(id) as totalCount
    from ramen
    where del_flg = 0
      and type = 5;
  </select>

  <select id="getRamenById" resultMap="BaseResultMap">
    SELECT *
    FROM ramen
    WHERE id = #{id}
      and del_flg = 0;
  </select>
</mapper>